{"version":3,"file":"instrumentation.js","sources":["../../../../../src/integrations/tracing/vercelai/instrumentation.ts"],"sourcesContent":["import { InstrumentationBase, InstrumentationNodeModuleDefinition } from '@opentelemetry/instrumentation';\nimport type { InstrumentationConfig, InstrumentationModuleDefinition } from '@opentelemetry/instrumentation';\nimport { SDK_VERSION } from '@sentry/core';\nimport type { TelemetrySettings } from './types';\n\n// List of patched methods\n// From: https://sdk.vercel.ai/docs/ai-sdk-core/telemetry#collected-data\nconst INSTRUMENTED_METHODS = [\n  'generateText',\n  'streamText',\n  'generateObject',\n  'streamObject',\n  'embed',\n  'embedMany',\n] as const;\n\ninterface MethodFirstArg extends Record<string, unknown> {\n  experimental_telemetry?: TelemetrySettings;\n}\n\ntype MethodArgs = [MethodFirstArg, ...unknown[]];\n\ntype PatchedModuleExports = Record<(typeof INSTRUMENTED_METHODS)[number], (...args: MethodArgs) => unknown> &\n  Record<string, unknown>;\n\nexport let sentryVercelAiPatched = false;\n\n/**\n * This detects is added by the Sentry Vercel AI Integration to detect if the integration should\n * be enabled.\n *\n * It also patches the `ai` module to enable Vercel AI telemetry automatically for all methods.\n */\nexport class SentryVercelAiInstrumentation extends InstrumentationBase {\n  public constructor(config: InstrumentationConfig = {}) {\n    super('@sentry/instrumentation-vercel-ai', SDK_VERSION, config);\n  }\n\n  /**\n   * Initializes the instrumentation by defining the modules to be patched.\n   */\n  public init(): InstrumentationModuleDefinition {\n    const module = new InstrumentationNodeModuleDefinition('ai', ['>=3.0.0 <5'], this._patch.bind(this));\n    return module;\n  }\n\n  /**\n   * Patches module exports to enable Vercel AI telemetry.\n   */\n  private _patch(moduleExports: PatchedModuleExports): unknown {\n    sentryVercelAiPatched = true;\n\n    function generatePatch(name: string) {\n      return (...args: MethodArgs) => {\n        const existingExperimentalTelemetry = args[0].experimental_telemetry || {};\n        const isEnabled = existingExperimentalTelemetry.isEnabled;\n\n        // if `isEnabled` is not explicitly set to `true` or `false`, enable telemetry\n        // but disable capturing inputs and outputs by default\n        if (isEnabled === undefined) {\n          args[0].experimental_telemetry = {\n            isEnabled: true,\n            recordInputs: false,\n            recordOutputs: false,\n            ...existingExperimentalTelemetry,\n          };\n        }\n\n        // @ts-expect-error we know that the method exists\n        return moduleExports[name].apply(this, args);\n      };\n    }\n\n    const patchedModuleExports = INSTRUMENTED_METHODS.reduce((acc, curr) => {\n      acc[curr] = generatePatch(curr);\n      return acc;\n    }, {} as PatchedModuleExports);\n\n    return { ...moduleExports, ...patchedModuleExports };\n  }\n}\n"],"names":["sentryVercelAiPatched","InstrumentationBase","SDK_VERSION","InstrumentationNodeModuleDefinition"],"mappings":";;;;;AAKA;AACA;AACA,MAAM,uBAAuB;AAC7B,EAAE,cAAc;AAChB,EAAE,YAAY;AACd,EAAE,gBAAgB;AAClB,EAAE,cAAc;AAChB,EAAE,OAAO;AACT,EAAE,WAAW;AACb,CAAE;;AAWSA,6BAAsB,GAAE;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,6BAA8B,SAAQC,mCAAoB,CAAA;AACvE,GAAS,WAAW,CAAC,MAAM,GAA0B,EAAE,EAAE;AACzD,IAAI,KAAK,CAAC,mCAAmC,EAAEC,gBAAW,EAAE,MAAM,CAAC;AACnE;;AAEA;AACA;AACA;AACA,GAAS,IAAI,GAAoC;AACjD,IAAI,MAAM,SAAS,IAAIC,mDAAmC,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxG,IAAI,OAAO,MAAM;AACjB;;AAEA;AACA;AACA;AACA,GAAU,MAAM,CAAC,aAAa,EAAiC;AAC/D,IAAIH,6BAAA,GAAwB,IAAI;;AAEhC,IAAI,SAAS,aAAa,CAAC,IAAI,EAAU;AACzC,MAAM,OAAO,CAAC,GAAG,IAAI,KAAiB;AACtC,QAAQ,MAAM,6BAA8B,GAAE,IAAI,CAAC,CAAC,CAAC,CAAC,sBAAA,IAA0B,EAAE;AAClF,QAAQ,MAAM,SAAA,GAAY,6BAA6B,CAAC,SAAS;;AAEjE;AACA;AACA,QAAQ,IAAI,SAAU,KAAI,SAAS,EAAE;AACrC,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,yBAAyB;AAC3C,YAAY,SAAS,EAAE,IAAI;AAC3B,YAAY,YAAY,EAAE,KAAK;AAC/B,YAAY,aAAa,EAAE,KAAK;AAChC,YAAY,GAAG,6BAA6B;AAC5C,WAAW;AACX;;AAEA;AACA,QAAQ,OAAO,aAAa,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;AACpD,OAAO;AACP;;AAEA,IAAI,MAAM,oBAAA,GAAuB,oBAAoB,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,KAAK;AAC5E,MAAM,GAAG,CAAC,IAAI,CAAA,GAAI,aAAa,CAAC,IAAI,CAAC;AACrC,MAAM,OAAO,GAAG;AAChB,KAAK,EAAE,EAAC,EAA0B;;AAElC,IAAI,OAAO,EAAE,GAAG,aAAa,EAAE,GAAG,sBAAsB;AACxD;AACA;;;;"}